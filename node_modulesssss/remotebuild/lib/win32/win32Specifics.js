// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.
/// <reference path="../../../typings/Q.d.ts" />
/// <reference path="../../../typings/tacoUtils.d.ts" />
/// <reference path="../../../typings/express.d.ts" />
/// <reference path="../../../typings/zip-stream.d.ts" />
"use strict";
var Q = require("q");
var resources = require("../../resources/resourceManager");
var utils = require("taco-utils");
var logger = utils.Logger;
var Win32Specifics = (function () {
    function Win32Specifics() {
    }
    Win32Specifics.prototype.defaults = function (base) {
        var win32defaults = {
            writePidToFile: false,
            lang: "en",
            suppressSetupMessage: false
        };
        Object.keys(win32defaults).forEach(function (key) {
            if (!(key in base)) {
                base[key] = win32defaults[key];
            }
        });
        return base;
    };
    // Note: we acquire dependencies for deploying and debugging here rather than in taco-remote-lib because it may require user intervention, and taco-remote-lib may be acquired unattended in future.
    Win32Specifics.prototype.initialize = function (conf) {
        return Q({});
    };
    Win32Specifics.prototype.printUsage = function (language) {
        logger.log(resources.getStringForLanguage(language, "UsageInformation"));
    };
    Win32Specifics.prototype.resetServerCert = function (conf) {
        return Q.reject(new Error("Not Implemented"));
    };
    Win32Specifics.prototype.generateClientCert = function (conf) {
        return Q.reject(new Error("Not Implemented"));
    };
    Win32Specifics.prototype.initializeServerCerts = function (conf) {
        return Q.reject(new Error("Not Implemented"));
    };
    Win32Specifics.prototype.getServerCerts = function () {
        return Q.reject(new Error("Not Implemented"));
    };
    Win32Specifics.prototype.removeAllCertsSync = function (conf) {
        throw new Error("Not Implemented");
    };
    Win32Specifics.prototype.downloadClientCerts = function (req, res) {
        res.sendStatus(404);
    };
    Win32Specifics.prototype.getHttpsAgent = function (conf) {
        throw new Error("Not Implemented");
    };
    return Win32Specifics;
}());
var win32Specifics = new Win32Specifics();
module.exports = win32Specifics;

//# sourceMappingURL=win32Specifics.js.map
