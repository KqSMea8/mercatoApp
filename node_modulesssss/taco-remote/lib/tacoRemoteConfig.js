// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.
/// <reference path="../../typings/remotebuild.d.ts" />
"use strict";
var HostSpecifics = require("./hostSpecifics");
var tacoUtils = require("taco-utils");
var TacoRemoteConfig = (function () {
    function TacoRemoteConfig(serverConf, moduleConf) {
        // Create a copy of the data so we don't accidentally modify things
        this.tacoRemoteConf = JSON.parse(JSON.stringify(moduleConf));
        this.tacoRemoteConf.lang = serverConf.lang;
        this.tacoRemoteConf.port = serverConf.port;
        this.tacoRemoteConf.serverDir = serverConf.serverDir;
        var defaults = {
            maxBuildsInQueue: 10,
            maxBuildsToKeep: 20,
            deleteBuildsOnShutdown: true,
            allowsEmulate: true,
            appLaunchStepTimeout: 10000,
            emulatorLaunchTimeout: 20000
        };
        var hostDefaults = HostSpecifics.hostSpecifics.defaults(defaults);
        var self = this;
        Object.keys(hostDefaults).forEach(function (key) {
            if (typeof (self.tacoRemoteConf[key]) === "undefined") {
                self.tacoRemoteConf[key] = hostDefaults[key];
            }
        });
    }
    Object.defineProperty(TacoRemoteConfig.prototype, "allowsEmulate", {
        /**
         * @name allowsEmulate
         */
        get: function () {
            return tacoUtils.ArgsHelper.argToBool(this.tacoRemoteConf.allowsEmulate);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "deleteBuildsOnShutdown", {
        /**
         * @name deleteBuildsOnShutdown
         */
        get: function () {
            return tacoUtils.ArgsHelper.argToBool(this.tacoRemoteConf.deleteBuildsOnShutdown);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "maxBuildsInQueue", {
        /**
         * @name maxBuildsInQueue
         */
        get: function () {
            return this.tacoRemoteConf.maxBuildsInQueue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "maxBuildsToKeep", {
        /**
         * @name maxBuildsToKeep
         */
        get: function () {
            return this.tacoRemoteConf.maxBuildsToKeep;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "nativeDebugProxyPort", {
        /**
         * @name nativeDebugProxyPort
         */
        get: function () {
            return this.tacoRemoteConf.nativeDebugProxyPort;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "webDebugProxyDevicePort", {
        /**
         * @name webDebugProxyDevicePort
         */
        get: function () {
            return this.tacoRemoteConf.webDebugProxyDevicePort;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "webDebugProxyPortMin", {
        /**
         * @name webDebugProxyPortMin
         */
        get: function () {
            return this.tacoRemoteConf.webDebugProxyPortMin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "webDebugProxyPortMax", {
        /**
         * @name webDebugProxyPortMax
         */
        get: function () {
            return this.tacoRemoteConf.webDebugProxyPortMax;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "appLaunchStepTimeout", {
        get: function () {
            return this.tacoRemoteConf.appLaunchStepTimeout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "emulatorLaunchTimeout", {
        get: function () {
            return this.tacoRemoteConf.emulatorLaunchTimeout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "serverDir", {
        // These three properties are inherited from the parent configuration; no need for separate documentation
        get: function () {
            return this.tacoRemoteConf.serverDir;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "lang", {
        get: function () {
            return this.tacoRemoteConf.lang;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TacoRemoteConfig.prototype, "port", {
        get: function () {
            return this.tacoRemoteConf.port;
        },
        enumerable: true,
        configurable: true
    });
    TacoRemoteConfig.prototype.get = function (prop) {
        return this.tacoRemoteConf[prop];
    };
    TacoRemoteConfig.prototype.serialize = function () {
        var confCopy = JSON.parse(JSON.stringify(this.tacoRemoteConf));
        // These three properties are taken from the root config, and are not individually configurable. Remove them when saving.
        delete confCopy.lang;
        delete confCopy.port;
        delete confCopy.serverDir;
        return confCopy;
    };
    return TacoRemoteConfig;
}());
module.exports = TacoRemoteConfig;

//# sourceMappingURL=tacoRemoteConfig.js.map
