// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for details.
"use strict";
/// <reference path="../typings/node.d.ts" />
/// <reference path="../typings/logger.d.ts" />
var os = require("os");
var logFormathelper = require("./logFormatHelper");
var LogFormatHelper = logFormathelper.LogFormatHelper;
var TacoUtility;
(function (TacoUtility) {
    var Logger = (function () {
        function Logger() {
        }
        /**
         * message can be any string with xml type tags in it.
         * supported tags can be seen in logger.ts
         * <blue><bold>Hello World!!!</bold></blue>
         * if using any kind of formatting, make sure that it is well formatted
         */
        Logger.log = function (message) {
            if (message || message === "") {
                Logger.stdout(LogFormatHelper.toFormattedString(message));
            }
        };
        /**
         * Logs an error string followed by a newline on stderr
         * input string can only have <br/> tags
         */
        Logger.logError = function (message) {
            if (message || message === "") {
                Logger.stderr(LogFormatHelper.toError(message));
            }
        };
        /**
         * Logs a warning string followed by a newline on stderr
         * input string can only have <br/> tags
         */
        Logger.logWarning = function (message) {
            if (message || message === "") {
                Logger.stderr(LogFormatHelper.toWarning(message));
            }
        };
        /**
         * Logs an empty line on console
         */
        Logger.logLine = function () {
            Logger.stdout(os.EOL);
        };
        Logger.stdout = function (msg) {
            process.stdout.write(msg);
        };
        Logger.stderr = function (msg) {
            process.stderr.write(msg);
        };
        return Logger;
    }());
    TacoUtility.Logger = Logger;
})(TacoUtility || (TacoUtility = {}));
module.exports = TacoUtility;

//# sourceMappingURL=logger.js.map
